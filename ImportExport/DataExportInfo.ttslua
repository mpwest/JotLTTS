completeMessage = 'Done exporting data. Please right click the Save Tool and select Save Object, then load the new version and import object from Objects menu at the top of the screen.'

commonRequestDataV1Base = {
    firstStep = 'CharacterInfoTile',
    ['CharacterInfoTile'] = { name = 'Character portrait tile', message = 'Please drop the Save Tool on a character portrait tile to be imported. If there are no more, please drop the token on the NEXT Tool',
        continue = 'CharacterSheet', next = 'AvailableStore', quantity = 0},
    ['CharacterSheet'] = { name = 'Character sheet', message = 'Please drop the Save Tool on the associated character sheet.', continue = 'AbilityDeckInUse', quantity = 1},
    ['AbilityDeckInUse'] = { name = 'In-use abilities', message = 'Please drop the Save Tool on that character\'s In-Use ability deck. Skip this step if you are still using any A or B cards with the NEXT Tool. Unused available cards will follow.',
        continue = 'AbilityDeckUnused', next = 'CharacterItems', quantity = 1},
    ['AbilityDeckUnused'] = { name = 'Not-in-use abilities', message = 'Please drop the Save Tool on that character\'s Not-In-Use ability deck. This should not include A and B cards. ' ..
        'Drop the token on the NEXT Tool if level 1 cards are not yet available', continue = 'CharacterItems', quantity = 1},
    ['CharacterItems'] = { name = 'Character items', message = 'Please drop the Save Tool on that character\'s items, merged into one deck. Drop the token on the NEXT Tool if no items are owned.', continueOrNext = 'CharacterInfoTile', quantity = 1},
    ['AvailableStore'] = { name = 'Store', message = 'Please drop the Save Tool on the available items deck. Or on the NEXT Tool if you\'ve managed to buy out the store.', continueOrNext = 'CityEvents', quantity = 1},
    ['CityEvents'] = { name = 'City Events', message = 'Cannot differentiate cards in current version. Please use the included sheet to mark off any completed events, without looking at incomplete events. ' ..
        'Then drop the Save Tool on the completed sheet.', continue = 'Map', quantity = 1},
    ['Map'] = { name = 'Map of Gloomhaven', message = 'Please drop the Save Tool on the map of Gloomhaven.', continue = 'LootIndex', quantity = 1},
    ['LootIndex'] = { name = 'Treasure Index tile', message = 'Please check off all looted chests on the included Treasure Index tile and drop the Save Tool on it.', continue = 'Done', quantity = 1},
}

requestData = {
    [1] = commonRequestDataV1Base,
    [2] = commonRequestDataV1Base,
    [3] = commonRequestDataV1Base
}

validTypeData = {
    -- version dependent rules
    [1] = {
        ['CharacterInfoTile'] = {type = {'Tile'}, name = {'Hatchet', 'Demolitionist', 'Voidwarden', 'Red Guard'}, expectedShort = '[Class Name]'},
        ['CharacterSheet'] = {type = {'Tile'}, name = {'Character Sheet'}},
        ['AbilityDeckInUse'] = {type = {'Deck'}, min = 6, max = 11}, -- contentProperty = nil
        ['AbilityDeckUnused'] = {type = {'Deck'}, max = 11}, -- swapped out cards from 3 X cards + 8 level up. A and B no longer valid options
        ['CharacterItems'] = {type = {'Deck', 'Card'}, max = 52 }, -- no particular properties to rely on. Bad item will require players to find items manually.
        ['AvailableStore'] = {type = {'Deck', 'Card'}, max = 52 }, -- no particular properties
        ['CityEvents'] = {type = {'Tile'}, name = {'Completed City Events'}},
        ['Map'] = { type = {'Tile'}, name = {'Map of Gloomhaven'}},
        ['LootIndex'] = { type = {'Tile'}, name = {'Treasure Index'}}
    },
    [2] = {
        ['CharacterInfoTile'] = {type = {'Tile'}, name = {'Hatchet', 'Demolitionist', 'Voidwarden', 'Red Guard', 'Brute', 'Cragheart', 'Mindthief', 'Scoundrel', 'Spellweaver', 'Tinkerer'}, expectedShort = '[Class Name]'},
        ['CharacterSheet'] = {type = {'Tile'}, name = {'Character Sheet'}},
        ['AbilityDeckInUse'] = {type = {'Deck'}, min = 6, max = 12},
        ['AbilityDeckUnused'] = {type = {'Deck'}, max = 11},
        ['CharacterItems'] = {type = {'Deck', 'Card'}, max = 52},
        ['AvailableStore'] = {type = {'Deck', 'Card'}, max = 52},
        ['CityEvents'] = {type = {'Tile'}, name = {'Completed City Events'}},
        ['Map'] = {type = {'Tile'}, name = {'Map of Gloomhaven'}},
        ['LootIndex'] = {type = {'Tile'}, name = {'Treasure Index'}}
    },
    [3] = {
        ['CharacterInfoTile'] = {type = {'Tile'}, name = {'Hatchet', 'Demolitionist', 'Voidwarden', 'Red Guard', 'Brute', 'Cragheart', 'Mindthief', 'Scoundrel', 'Spellweaver', 'Tinkerer',
            'Sunkeeper', 'Nightshroud', 'Sawbones', 'Elementalist', 'Berserker', 'Summoner', 'Beast Tyrant', 'Quartermaster', 'Doomstalker', 'Plagueherald', 'Soothsinger', 'Diviner'}, expectedShort = '[Class Name]'},
        ['CharacterSheet'] = {type = {'Tile'}, nameFunction = 'checkCharacterSheet', expectedNameFunction = 'formatExpectedSheetName'},
        ['AbilityDeckInUse'] = {type = {'Deck'}, min = 6, max = 12},
        ['AbilityDeckUnused'] = {type = {'Deck'}, max = 11},
        ['CharacterItems'] = {type = {'Deck', 'Card'}, max = 52},
        ['AvailableStore'] = {type = {'Deck', 'Card'}, max = 52},
        ['CityEvents'] = {type = {'Tile'}, name = {'Completed City Events'}},
        ['Map'] = {type = {'Tile'}, name = {'Map of Gloomhaven'}},
        ['LootIndex'] = {type = {'Tile'}, name = {'Treasure Index'}}
    }
}

nameMapping = {
    [1] = {
        ['Hatchet'] = {[''] = 'One-Two Punch (66)'},
        --['items'] = {}
    },
    [2] = {
        ['Hatchet'] = {[''] = 'One-Two Punch (66)'}
    },
    [3] = {}
}

allowedUninteractableNames = {'Map of Gloomhaven'}

function getVersionCustom()
    -- version 1 and 2 can be differentiated by presence of Gloomhaven character boxes
    local bruteTuckBoxGUID = '7dfec2'
    if getObjectFromGUID(bruteTuckBoxGUID) ~= nil then
        return 2
    else
        return 1
    end
end
